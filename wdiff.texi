\input texinfo
@c ===========================================================================
@c
@c This file was generated with po4a. Translate the source file.
@c
@c ===========================================================================

@c %**start of header
@setfilename wdiff.info
@documentencoding UTF-8
@include version.texi
@include flags.texi
@ifset EXPERIMENTAL
@settitle A word difference finder (and others)
@end ifset
@ifclear EXPERIMENTAL
@settitle Поиск различия в словах
@end ifclear
@finalout
@c %**end of header

@dircategory Создание текста и работа с ним
@direntry
* Различия слов: (wdiff).  GNU wdiff и связанные с 
                                         ним инструменты.
@end direntry

@dircategory Индивидуальные утилиты
@direntry
* wdiff: вызов (wdiff)wdiff.  Поиск различия в 
                                     словах
@ifset EXPERIMENTAL
* вызов wdiff2: (wdiff)wdiff.  Поиск различия в словах  * вызов mdiff:
(wdiff)mdiff.  Поиск кластера строк.  * вызов unify: (wdiff)unify.
Конвертер diff форматов.
@end ifset
@end direntry

@copying
Этот файл документирует команду @command{wdiff}, которая сравнивает два
файла и определяет, какие слова были удалены или добавлены в первый для
получения второго.
@ifset EXPERIMENTAL
Он также документирует некоторые другие инструменты, связанные с
@command{diff}.
@end ifset

Copyright @copyright{} 1992, 1994, 1997, 1998, 1999, 2010, 2011, 2012, 2013
Free Software Foundation, Inc.

Разрешается изготовление и распространение дословных копий данного
руководства при условии, что уведомление об авторских правах и это
уведомление о разрешении сохраняются на всех копиях.

@ignore
Permission is granted to process this file through TeX and print the
results, provided the printed document carries copying permission
notice identical to this one except for the removal of this paragraph
(this paragraph not being relevant to the printed manual).

@end ignore
Разрешается копировать и распространять модифицированные версии этого
руководства на условиях дословного копирования, при условии, что вся
полученная производная работа распространяется на условиях уведомления о
разрешении, идентичного настоящему.

Разрешается копировать и распространять переводы этого руководства на другой
язык при указанных выше условиях для измененных версий, за исключением того,
что это уведомление о разрешении может быть указано в переводе, одобренном
Фондом.
@end copying

@titlepage
@title GNU wdiff, version @value{VERSION}
@ifset EXPERIMENTAL
@subtitle A word difference finder (and others)
@end ifset
@ifclear EXPERIMENTAL
@subtitle Поиск различия в словах
@end ifclear
@subtitle Edition @value{EDITION}, @value{UPDATED-MONTH}
@author Франсуа Пинар
@author Мартин фон Гагерн

@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@ifnottex
@comment =============================================================
@node Top
@top GNU wdiff
@comment =============================================================

@ifset EXPERIMENTAL
Эти info-страницы документируют @command{wdiff}, средство поиска различий
слов, а также некоторые другие инструменты, связанные с @command{diff}.
Обратите внимание, что некоторые задокументированные здесь инструменты
считаются экспериментальными и могут не входить в состав каждой установки
@command{wdiff}.
@end ifset
@ifclear EXPERIMENTAL
Эти информационные страницы документируют @command{wdiff}, средство поиска
различий слов.  Экспериментальные приложения, включенные в тот же исходный
пакет, не были активированы для вашей системы, поэтому их документация также
будет опущена.
@end ifclear
@xref{Experimental}.

Документация для версии @value{VERSION}.

@menu
* Обзор::               Обзор
* wdiff::                    Средство поиска разницы 
                               слов
@ifset EXPERIMENTAL
* mdiff:: Поиск кластеров строк * unify:: Конвертер форматов diff *
Compatibility:: Отличия от команды @command{mdiff} * Experimental:: Об
экспериментальных программах
@end ifset
@ifclear EXPERIMENTAL
* Experimental:: Об экспериментальных программах
@end ifclear


@detailmenu


--- Подробный список---



Средство поиска разницы слов



* Вызов wdiff::         Вызов @command{wdiff}
* Примеры вызова wdiff::  Реальные примеры 
                                         вызова @command{wdiff}
@ifset EXPERIMENTAL
Средство поиска multi-различий

* mdiff invocation:: Вызов @command{mdiff} * Efficiency:: Ресурсы и
эффективность

Конвертер форматов diff

* unify invocation:: Вызов @command{unify}

Чем отличается @command{mdiff}

* Совместимость diff:: Различия с @command{diff} * Совместимость с wdiff::
Различия с @command{wdiff}

Экспериментальные программы

* Experimental History:: История экспериментальных программ

@end ifset
@end detailmenu
@end menu

@end ifnottex

@contents

@comment =============================================================
@node Обзор
@chapter Обзор
@comment =============================================================

@command{wdiff} — это интерфейс к @command{diff} для пословного сравнения
файлов. Он работает путем создания двух временных файлов, содержащих по
одному слову в строке, а затем выполняет команду @command{diff} для этих
файлов. Он собирает выходные данные @command{diff} и использует их для более
удобного отображения различий в словах в исходных файлах.

@ifset EXPERIMENTAL

@command{mdiff} проходит по одному или нескольком входным файлам и
обнаруживает блоки элементов, которые повторяются более чем в одном месте.
Элементы могут быть строками, словами или объектами, определенными
пользователем.  В режиме пословного сравнения @command{mdiff} сравнивает два
файла, находя, какие слова были удалены или добавлены в первый файл для
получения второго, что бывает полезно, когда тексты отличаются всего на
несколько слов и были были добавлены абзацы.  Программа имеет множество
форматов вывода и хорошо взаимодействует с терминалами и пейджерами
(особенно с @command{less}).

@command{unify} может преобразовывать различия в формат unidiff или
наоборот.  Некоторые люди предпочитают один формат и недолюбливают другой,
но это религиозный вопрос.  Эта программа возвращает мир на Землю.

@command{wdiff2} предназначен для замены @command{wdiff}.  Он нацелен на
поддержку того же набора параметров, но использует @command{mdiff} вместо
@command{diff} в качестве своего бэкенда.

@command{wdiff}, @command{mdiff} и @command{wdiff2} были написаны Франсуа
Пинаром, а @command{unify} — Уэйном Дэвисоном.
@end ifset
@ifclear EXPERIMENTAL
@command{wdiff} был написан Франсуа Пинаром.
@end ifclear
Пожалуйста, сообщайте об ошибках по адресу @email{wdiff-bugs@@gnu.org}.
Укажите номер версии. Для ее получения запустите программу с параметром
@option{--version}.  Пожалуйста, включите в свое сообщение достаточно данных
для воспроизведения результата, того результат, который вы ожидали, а также
подробные объяснения характера проблемы.

@comment =============================================================
@node wdiff
@chapter Средство поиска разницы слов
@comment =============================================================

@ifset EXPERIMENTAL
На самом деле есть две программы для пословного сравнения файлов.
@command{wdiff} — это интерфейс к @command{diff} из пакета GNU
diffutils. Это достаточно зрелая программа.  Его преемник, @command{wdiff2},
является внешним интерфейсом к @command{mdiff} - таким же экспериментальным,
как и сам @command{mdiff}.  @xref{Experimental}.
@end ifset

@ifclear EXPERIMENTAL
@command{wdiff} — это программа для спословного сравнения файлов.  Это
интерфейс к @command{diff} из пакета GNU diffutils.
@end ifclear
Слово считается объект заключенный между двумя пробелами.  Программа полезна
для сравнения двух текстов, в которых было изменено несколько слов и
добавлено нескольго абзацев.

@menu
* Вызов wdiff::         Вызов @command{wdiff}
* Примеры вызова wdiff::  Реальные примеры 
                                         вызова @command{wdiff}
@end menu

@comment -------------------------------------------------------------
@node Вызов wdiff
@section Вызов @command{wdiff}

@ifset EXPERIMENTAL
Программы @command{wdiff} и @command{wdiff2} используют одинаковый набор
параметров командной строки. Они описаны ниже.  @xref{wdiff Compatibility},
список различий.
@end ifset
@ifclear EXPERIMENTAL
Запуск программы @command{wdiff}:
@end ifclear

@example
wdiff @var{option} @dots{} @var{old_file} @var{new_file}
wdiff @var{option} @dots{} -d [@var{diff_file}]
@end example

@command{wdiff} сравнивает файлы @var{old_file} и @var{new_file} и создает
копию @var{new_file} с комментариями на стандартном выходе.  Пустая строка
или @samp{-} обозначает стандартный ввод, но стандартный ввод нельзя
использовать дважды в одном и том же вызове.  У файла должен быть указан
полный путь, имя каталога не принимается.  @command{wdiff} завершит работу
со статусом 0, если различий не обнаружено, статусом 1, если обнаружены
какие-либо различия, или статусом 2 в случае любой ошибки.

В этой документации @dfn{удаленный текст} относится к тексту в
@var{old_file}, которого нет в @var{new_file}, а @dfn{вставленный текст}
относится к тексту в @var{new_file}, которого нет в @var{old_file}.

@command{wdiff} поддерживает следующие параметры командной строки:

@table @option
@item --help
@itemx -h
Печать информауионное сообщение с описанием параметров.

@item --version
@itemx -v
Печать номера версии @command{wdiff} в стандартном выводе ошибок.

@item --no-deleted
@itemx -1
Подавление печати удаленных слов на выходе.  Если не выбран ни @option{-1},
ни @option{-2}, для некоторых строк может получиться переполнение по длине
строки.

@item --no-inserted
@itemx -2
Подавление печати вставленных слов на выходе.  Когда указан этот флаг,
пробелы в выводе берутся из @var{old_file} вместо @var{new_file}.  Если не
выбран ни @option{-1}, ни @option{-2}, для некоторых строк может получиться
переполнение по длине строки.

@item --no-common
@itemx -3
Подавление печати общих слов на выходе.  Когда эта опция не выбрана, общие
слова и пробелы берутся из @var{new_file}, если не задана опция @option{-2},
в противном случае общие слова и пробелы скорее берутся из @var{old_file}.
При выборе различия отделяются друг от друга строками с тире.  Кроме того,
если эта опция выбрана одновременно с @option{-1} или @option{-2}, то ни в
одном выводе не будет выделения, т. е. жирного или подчеркнутого.  Наконец,
если эта опция не выбрана, но выбраны обе опции @option{-1} и @option{-2},
разделы общих слов между различиями разделяются строками с тире.

@item --ignore-case
@itemx -i
Не учитывать разницу в регистре при сравнении слов.  При сравнении слов
каждая строчная буква эквивалентна букве в верхнем регистре.

@item --statistics
@itemx -s
По завершении для каждого файла выводится общее количество слов, количество
общих, удаленных (вставленных) и измененных слов.  (Измененное слово — это
слово, которое было заменено или является частью замены.) За исключением
общего количества слов, за всеми числами следует процентное соотношение к
общему количеству слов в файле.

@item --auto-pager
@itemx -a
Некоторые параметры, которые ранее использовались в предыдущих версиях
@command{wdiff} автоматически, теперь контролируются этим параметром.  При
использовании параметра пейджер вставляется всякий раз, когда вывод
@command{wdiff} направляется на пользовательский терминал.  Без этой опции
пейджер вызываться не будет и пользователь несет ответственность за явную
передачу вывода @command{wdiff} в пейджер (если это необходимо).

Пейджер выбирается по значению переменной окружения @var{PAGER} при запуске
@command{wdiff}.  Если переменная @var{PAGER} не определена, то будет
использоваться пейджер по умолчанию, выбранный во время установки.
Определенное, но пустое значение @var{PAGER} означает отсутствие пейджера.

При использовании этой опции, также выбирается одна из опций @option{-l} или
@option{-t}, в зависимости от того, присутствует ли строка @samp{less} в
имени пейджера или нет.

Часто полезно определить @samp{wdiff} как псевдоним(alias) для @samp{wdiff
-a}.  Однако это @emph{скрывает} обычное поведение @command{wdiff}.
Поведение по умолчанию можно восстановить, просто передав выходные данные от
@command{wdiff} через @command{cat}.  Это отделяет вывод от
пользовательского терминала.

@item --printer
@itemx -p
Использовать чрезмерное выделение.  Каждый символ удаленного текста
подчеркивается путем написания сначала символа подчеркивания @samp{_}, затем
символа возврата, а затем буквы, которую нужно подчеркнуть.  Каждый символ
вставленного текста выделяется двукратным написанием с пробелом между ними.
Этот параметр не используется по умолчанию.

@item --less-mode
@itemx -l
Использовать чрезмерное выделение.  Эта опция работает как опция
@option{-p}, но также перечеркивает пробелы, связанные со вставленным
текстом.  @command{less} показывает такие пробелы, используя обратное
видео.  Этот параметр не используется по умолчанию.  Однако он автоматически
включается всякий раз, когда @command{wdiff} испоользуется пейджер
@command{less}.  См. вариант @option{-a}.

Этот параметр обычно используется в сочетании с @command{less}:

@example
wdiff -l @var{old_file} @var{new_file} | less
@end example

@item --terminal
@itemx -t
Принудительное создание строк @code{termcap} для выделения частей вывода,
даже если стандартный вывод не связан с терминалом.  Переменная среды
@env{TERM} должна содержать имя правильной записи @code{termcap}.  Если
позволяет описание терминала, для выделения удаленного текста используется
подчеркивание, а для выделения вставленного текста используется жирный шрифт
или перевернутое видео.  Этот параметр не используется по умолчанию.  Однако
он автоматически включается всякий раз, когда @command{wdiff} используется
пейджер, и известно, что этот пейджер @emph{не} @command{less}.  См. вариант
@option{-a}.

Этот параметр обычно используется, когда вывод @command{wdiff} не
перенаправляется, а отправляется непосредственно на пользовательский
терминал, например:

@example
wdiff -t @var{old_file} @var{new_file}
@end example

Обычно @command{wdiff} используется вместе с пейджером @command{more},
например:

@example
wdiff -t @var{old_file} @var{new_file} | more
@end example

Однако некоторые версии @command{more} используют выделение @code{termcap} в
своих целях, поэтому возможно странное поведение.

@item --start-delete @var{argument}
@itemx -w @var{argument}
Использование @var{argument} в качестве @dfn{маркера начала удаленного
текста}.  Эта строка будет выводиться перед любой последовательностью
удаленного текста для указания его начала.  По умолчанию этот маркер не
используется, если нет других средств выделения начала такого текста; в этом
случае маркером по умолчанию является @samp{[-}.

@item --end-delete @var{argument}
@itemx -x @var{argument}
Использование @var{argument} в качестве @dfn{маркера окончания удаленного
текста}.  Эта строка будет выводиться после любой последовательности
удаленного текста для указания его окончания.  По умолчанию этот маркер не
используется, если нет других средств выделения окончания такого текста; в
этом случае маркером по умолчанию является @option{-]}.

@item --start-insert @var{argument}
@itemx -y @var{argument}
Использование @var{аргумент} в качестве @dfn{маркера начала вставки}.  Эта
строка будет выводиться перед любой последовательностью вставленного текста
для указания ее начала.  По умолчанию этот не используется, если нет других
средств выделения начала такого текста; в этом случае маркером по умолчанию
является @samp{@{+}.

@item --end-insert @var{argument}
@itemx -z @var{argument}
Использование @var{аргумент} в качестве @dfn{маркера конца вставки}.  Эта
строка будет выводиться после любой последовательности вставленного текста,
чтобы указания ее окончания.  По умолчанию этот маркер не используется, если
нет других выделения такого текста; в этом случае маркером по умолчанию
является @samp{+@}}.

@item --avoid-wraps
@itemx -n
Подавление растяжения строки при отображении удаленного или вставленного
текста.  Любой отдельный фрагмент удаленного или вставленного текста,
занимающий много строк, будет считаться состоящим из множества более мелких
фрагментов, не содержащих новой строки.  Таким образом, удаленный текст,
например, будет иметь маркер окончания удаления в конце каждой строки,
непосредственно перед перносом строки, и маркер начала удаления в начале
следующей строки.  В длинном абзаце вставленного текста каждая строка будет
заключена в квадратные скобки между маркерами начала и конца вставки.  Это
поведение не используется по умолчанию.

@item --diff-input
@itemx -d
Использование единый унифицированный diff в качестве входных данных. Если
входной файл не указан, вместо него используется стандартный ввод. Что можно
использовать для постобработки различий, сгенерированных другими
приложениями, такими как системы контроля версий:

@example
svn diff | wdiff -d
@end example
@end table

Обратите внимание, что опции @option{-p}, @option{-t} и @option{-[wxyz]} не
являются взаимоисключающими.  При использовании их комбинации вы получаете
совместный результат.  Опция @option{-l} является вариантом опции
@option{-p}.

@comment -------------------------------------------------------------
@node Примеры вызова wdiff
@section Реальные примеры вызова @command{wdiff}

В этом разделе представлено несколько примеров использования, большинство из
них предоставлено пользователями @command{wdiff}.

@itemize @bullet
@item Пример Change bars.

@itemize @bullet

@item
Этот пример взят из обсуждения с @email{jbw@@cs.bu.edu, Джо Уэллсом}.

Следующая команда создает копию @var{new_file}, сдвинутую вправо на один
пробел для размещения change bars с момента последней редакции, игнорируя
изменения, возникшие только в результате добавления абзаца.  Любая строка с
новым или измененным текстом получит @samp{|} в столбце 1.  Однако удаленный
текст не отображается и не помечается.

@example
wdiff -1n @var{old_file} @var{new_file} |
  sed -e 's/^/  /;/@{+/s/^ /|/;s/@{+//g;s/+@}//g'
@end example

Вот как это работает.  Находятся различия в словах, обращая внимание только
на дополнения, как того требует опция @option{-1}.  Для больших изменений,
которые охватывают границы строки, строки вставки скобок повторяются в
каждой выходной строке, как того требует опция @option{-n}.  Затем этот
вывод переформатируется с помощью скрипта @command{sed}, который сдвигает
текст на два столбца вправо, превращает начальный пробел в полосу только в
том случае, если в этой строке есть какой-то новый текст, а затем удаляет
все вставки квадратных скобок.

@end itemize

@item Пример La@TeX{}.

@itemize @bullet
@item

Этот пример предоставлен @email{fisk@@polar.bowdoin.edu, Steve Fisk}.

Вызов La@TeX{} для помещения удаленного текста в блоки и нового текста в
двойные блоки:

@example
wdiff -w "\fbox@{" -x "@}" -y "\fbox@{\fbox@{" -z "@}@}" @dots{}
@end example

@noindent
работает хорошо.

@end itemize

@item Пример @command{troff}.

@itemize @bullet

@item
Предоставлен @email{pgf@@cayman.com, Пол Фокс}.

Использование @command{wdiff} с некоторыми специфичными для @command{troff}
разделителями дает @emph{намного} лучший результат.  Разделители, которые я
использовал:

@example
wdiff -w'\s-5' -x'\s0' -y'\fB' -z'\fP' @dots{}
@end example

Это делает размер удалений на 5 пунктов меньше, чем обычно, и выделяет
полужирным вставки.  Фантастика!

Я экспериментировал с:

@example
wdiff -w'\fI' -x'\fP' -y'\fB' -z'\fP'
@end example

поскольку это больше похоже на значения по умолчанию, которые используются
для терминалов или принтеров, но поскольку я сам использую курсив для
выделения в своих документах, я подумал, что размер шрифта делает это был
более понятным.

Я попробовал это с кодом и команда работаетработает на удивление хорошо...

@item
@email{leisner@@eso.mc.xerox.com, Марти Лейснер} говорит:

В предыдущем примере у вас был удален меньший текст и вставлен жирный
шрифт.  У меня был удаленный текст имеет меньший размер, а вставленны более
крупный - я использую жирный шрифт для других вещей - это более понятно.

@example
wdiff -w '\s-3' -x'\s0' -y'\s+3' -z'\s0'
@end example

@end itemize

@item Пример цветного вывода.

@itemize @bullet

@item
Этот пример взят из @email{Martin.vGagern@@gmx.net, Мартин фон Гагерн}.

Если вам нравится цветной вывод, и ваш терминал поддерживает управляющие
последовательности ANSI, вы можете использовать этот вызов:

@example
wdiff -n \
  -w $'\033[30;41m' -x $'\033[0m' \
  -y $'\033[30;42m' -z $'\033[0m' \
  @dots{} | less -R
@end example

При этом удаленный текст будет напечатан черным на красном, а вставленный
текст черным на зеленом, при условии, что ваши обычные цвета терминала —
белый на черном.  Конечно, вы можете выбрать какие хотите цвета.

Нотация @samp{$'@dots{}'} поддерживается GNU bash и, возможно, другими
оболочками. Если ваша оболочка не совместима, то могут понадобиться
дополнительные приемы для создания этих escape-последовательностей в
качестве аргументов командной строки.

@end itemize

@end itemize

Кстати, пользователи GNU Emacs могут заметить, что интерактивная функция
@code{compare-windows} игнорирует изменения пробелов, если ей задан числовой
аргумент.  Если переменная @code{compare-ignore-case} не является
@code{nil}, она также игнорирует различия в регистре.  Таким образом, это
своего рода инкрементная версия @command{wdiff}.

@ifset EXPERIMENTAL

@comment =============================================================
@node mdiff
@chapter Средство поиска multi-различий
@comment =============================================================

Название @command{mdiff} расшифровывается как @emph{multi-}@command{diff} и
предназначено для охвата функциональных возможностей некоторых других
программ типа @command{diff}.  Префикс @emph{multi-} также обозначает тот
факт, что программа часто может получать на вход более файлов одновременно.

Теория работы проста.  Программа разбивает все входные файлы на
последовательность элементов, которые могут быть строками или словами.
После говорят о том, что @command{mdiff} работает либо в @dfn{режиме строк},
либо в @dfn{режиме слов}.  Затем он пытается найти последовательности
элементов, которые повторяются во входных файлах.  Такие общие
последовательности называются @dfn{кластерами} элементов, а каждое
повторение называется @dfn{членом} кластера.  После концептуального удаления
всех элементов кластера из всех входных файлов остается набор
@dfn{различий}.  Роль @command{mdiff} заключается в удобном перечислении
членов кластера и различий.

Когда входные файлы очень похожи, вполне вероятно, что кластеры будут
охватывать множество элементов (строк или слов), а различия будут
небольшими.  Таким образом, большинство опций запрещают печать элементов
кластера.  Тем не менее, можно попросить, чтобы несколько начальных или
конечных элементов элементов кластера были напечатаны, для обеспечения
обратной связи или @dfn{контекста} различия, иногда говорят, что эти
элементы контекста находятся в @dfn{горизонте} различий.  В объединенных
листингах элементы кластера могут просто не печататься, за исключением
нескольких элементов контекста в начале члена (сразу после различия) и
нескольких элементов контекста в конце члена (непосредственно перед
различием).

Когда члены кластера короткие или, если хотите, когда различия находятся
близко друг к другу, вполне возможно, что требуемые элементы контекста часто
охватывают полный объем членов кластера, которые затем больше не
подавляются, когда это происходит.  Ряд различий, смешанных с такими
непогашенными членами, называется @dfn{куском} (hunk).  Некоторые отчеты,
созданные @command{mdiff}, показаны в виде списка кусков, и следует
понимать, что общие элементы между фрагментами опущены.  Однако каждый кусок
сам по себе не имеет пропущенных элементов, а каждый элемент куска
анализируется как относящийся либо только к одному входному файлу, либо ко
многим из них.  Каждому куску предшествует заголовок, который объясняет
позицию строки всех входных файлов до самого куска.  Сравнивая заголовок
куска с предыдущим заголовком куска, пользователь может получить подсказку о
том, сколько текста не было напечатано.

Когда два входных файла очень похожи, кластеры обычно представлены в одном и
том же порядке во всех файлах.  Если член кластера @var{A} в первом файле
соответствует члену кластера @var{A} во втором файле, вполне вероятно, что
другой член кластера @var{B} идущий @emph{после} @var{ A} в первом файле
будет соответствовать члену кластера @var{B} во втором файле, который также
появляется @emph{после} @var{A}.  Таким образом, во многих случаях при
создании объединенного списка файлов члены кластера могут естественным
образом соответствовать друг другу.  Однако это не всегда верно, в
частности, когда второй файл был создан из первого путем перемещения
большого фрагмента кода из первоначального положения.  В таких случаях мы
говорим, что у членов есть @dfn{пересечение}.  Когда члены пересекаются и
@command{mdiff} должна составить объединенный список, она выбирает один
элемент кластера как @emph{естественно} связанный с его корреспондентом
(либо парой @var{A}, либо парой @var{B}), а затем рассматривать другой
кластер как часть различия.  Перекрестный характер члена все еще может быть
проанализирован, а затем выведен в отчет или проигнорирован.

Стандартная программа @command{diff} предназначена для случаев, когда
имеется ровно два входных файла, для которых пересекающиеся элементы следует
игнорировать.  Формат вывода @command{mdiff} был разработан таким образом,
что он должен напоминать вывод @command{diff} именно для этого случая.
Однако форматов @command{diff} недостаточно для представления всех случаев,
которые @command{mdiff} может решить, и они еще не отработаны.  Вот почему
@command{mdiff} в своем текущем состоянии все еще экспериментирует с
форматами вывода, которые могут быть изменены.

Когда входные файлы не очень похожи или, скорее, отличаются, объединенные
списки не очень важны и полезны, и даже могут быть довольно запутанными.
Лучше всего в таких случаях использовать @command{mdiff} для создания
аннотированного повторного списка всех входных файлов, в котором элементы
кластера должным образом идентифицируются и ссылаются друг на друга.

Статистика.

@example
Read summary: 137 files, 41975 lines
Work summary: 439 clusters, 1608 members, 8837 duplicate lines
@end example

@noindent
Сводные строки, вызванные опцией @option{-s}, говорят, что около 8837
неигнорируемых строк могут быть удалены из 41975, которые были прочитаны, с
помощью функций @code{#include}, @code{#define } или аналогичные устройств.

Если кому-то удастся выполнить @command{mdiff} в GNU Emacs, чтобы описанный
выше вывод был собран в буфер @code{*compilation*}, команда @kbd{C-`}
(@samp{@w{M-x next- error}}) перейдет к следующему элементу кластера в
другом окне и аналогично для других команд режима компиляции.  Это удобный
способ обработки вывода @command{mdiff}.

Каждая строка в куске после заголовка идет из сравниваемых файлов, но
сдвинута вправо, поэтому первый столбец (или первые несколько столбцов)
каждой строки дает информацию о том, откуда идет строка.  Пробел указывает
на строку, общую для всех файлов.  В случае, если входных файлов всего два,
знак минус указывает на строку из первого файла, а знак плюс — на строку из
второго файла.  В противном случае буква от @samp{a} до @samp{z} или более
одной буквы, если имеется более 26 файлов, показывает, к какому файлу
относится строка.  Если строка или блок строк относятся ко многим файлам, но
не ко всем, в первом столбце отображается вертикальная черта, а строка или
блок строк заключаются в квадратные скобки между @samp{@@/} и @samp{@@. \\}
строк, которые являются своего рода комментариями внутри фрагмента.  В
начальной скобке перечислены все буквы файлов, относящиеся к входящей
строке.

Первоначально я написал @command{mdiff} специально, чтобы помочь очистить
проект C++, который был настолько большим, и в котором много больших
монолитные классы были получены друг из друга, скорее всего, путем грубого
копирования с последующими локальными модификациями.  Я намеревался
фрагментировать наиболее распространенные кластеры и разделить части на
виртуальные методы во внешних классах и, при необходимости, переопределить
эти методы менее распространенными вариантами во внутренних классах.
@command{mdiff} хорошо указал мне места поиска.  Конечно, эту работу не
сделали за меня, но этот инструмент помогал в исследовании того, что следует
делать.  Повторное использование @command{mdiff} над наполовину очищенным
проектом дало мне более детальный анализ того, что осталось рассмотреть.

@menu
* Вызов mdiff::         Вызов @command{mdiff}
* Эффективность::  Соображения по ресурсам 
                                  и эффективность
@end menu

@comment -------------------------------------------------------------
@node Вызов mdiff
@section Вызов @command{mdiff}

Формат запуска программы @command{mdiff}:

@example
mdiff @var{option} @dots{} @var{file} @dots{}
@end example

@command{mdiff} читает все входные @var{file} и выводит результаты на
стандартный вывод.  При желании стандартный поток ошибок может
использоваться для получения отчета о ходе выполнения или статистики.

@command{wdiff} сравнивает файлы @var{old_file} и @var{new_file} и создает
копию @var{new_file} с комментариями на стандартном выходе.  Пустая строка
или @option{-} обозначает стандартный ввод, но стандартный ввод нельзя
использовать дважды в одном и том же вызове.  У файла должен быть указан
полный путь, имя каталога не принимается.  @command{wdiff} завершит работу
со статусом 0, если различий не обнаружено, статусом 1, если обнаружены
какие-либо различия, или статусом 2 в случае любой ошибки.

В этой документации @dfn{удаленный текст} относится к тексту в
@var{old_file}, которого нет в @var{new_file}, а @dfn{вставленный текст}
относится к тексту в @var{new_file}, которого нет в @var{old_file}.

@command{mdiff} поддерживает следующие параметры командной строки:

@table @option
@item --version
Просто выводит номера версий на стандартный вывод и завершает работу, ничего
больше не делая.

@item --help
Просто печатает страницу справки на стандартный вывод и завершает работу,
ничего больше не делая.

@item --no-deleted
@itemx -1
Подавление печати удаленных слов на выходе.  Если не выбран ни @option{-1},
ни @option{-2}, для некоторых строк может получиться переполнение по длине
строки.

@item --no-inserted
@itemx -2
Подавление печати вставленных слов на выходе.  Когда указан этот флаг,
пробелы в выводе берутся из @var{old_file} вместо @var{new_file}.  Если не
выбран ни @option{-1}, ни @option{-2}, для некоторых строк может получиться
переполнение по длине строки.

@item --no-common
@itemx -3
Подавление печати общих слов на выходе.  Когда эта опция не выбрана, общие
слова и пробелы берутся из @var{new_file}, если не задана опция @option{-2},
в противном случае общие слова и пробелы скорее берутся из @var{old_file}.
При выборе различия отделяются друг от друга строками с тире.  Кроме того,
если эта опция выбрана одновременно с @option{-1} или @option{-2}, то ни в
одном выводе не будет выделения, т. е. жирного или подчеркнутого.  Наконец,
если эта опция не выбрана, но выбраны обе опции @option{-1} и @option{-2},
разделы общих слов между различиями разделяются строками с тире.

@item --ignore-case
@itemx -i
Не учитывать разницу в регистре при сравнении слов.  При сравнении слов
каждая строчная буква эквивалентна букве в верхнем регистре.

@item --auto-pager
@itemx -A
Некоторые параметры, которые ранее использовались в предыдущих версиях
@command{wdiff} автоматически, теперь контролируются этим параметром.  При
использовании параметра пейджер вставляется всякий раз, когда вывод
@command{wdiff} направляется на пользовательский терминал.  Без этой опции
пейджер вызываться не будет и пользователь несет ответственность за явную
передачу вывода @command{wdiff} в пейджер (если это необходимо).

Пейджер выбирается по значению переменной окружения @var{PAGER} при запуске
@command{wdiff}.  Если переменная @var{PAGER} не определена, то будет
использоваться пейджер по умолчанию, выбранный во время установки.
Определенное, но пустое значение @var{PAGER} означает отсутствие пейджера.

При использовании этой опции, также выбирается одна из опций @option{-l} или
@option{-t}, в зависимости от того, присутствует ли строка @samp{less} в
имени пейджера или нет.

Часто полезно определить @samp{wdiff} как псевдоним(alias) для @samp{wdiff
-a}.  Однако это @emph{скрывает} обычное поведение @command{wdiff}.
Поведение по умолчанию можно восстановить, просто передав выходные данные от
@command{wdiff} через @command{cat}.  Это отделяет вывод от
пользовательского терминала.

@item --printer
@itemx -p
Использовать чрезмерное выделение.  Каждый символ удаленного текста
подчеркивается путем написания сначала символа подчеркивания @samp{_}, затем
символа возврата, а затем буквы, которую нужно подчеркнуть.  Каждый символ
вставленного текста выделяется двукратным написанием с пробелом между ними.
Этот параметр не используется по умолчанию.

@item --less-mode
@itemx -l
Использовать чрезмерное выделение.  Эта опция работает как опция
@option{-p}, но также перечеркивает пробелы, связанные со вставленным
текстом.  @command{less} показывает такие пробелы, используя обратное
видео.  Этот параметр не используется по умолчанию.  Однако он автоматически
включается всякий раз, когда @command{wdiff} испоользуется пейджер
@command{less}.  См. вариант @option{-a}.

Этот параметр обычно используется в сочетании с @command{less}:

@example
wdiff -l @var{old_file} @var{new_file} | less
@end example

@item --terminal
@itemx -t
Принудительное создание строк @code{termcap} для выделения частей вывода,
даже если стандартный вывод не связан с терминалом.  Переменная среды
@samp{TERM} должна содержать имя допустимой записи @code{termcap}.  Если
позволяет описание терминала, для выделения удаленного текста используется
подчеркивание, а для выделения вставленного текста используется жирный шрифт
или перевернутое видео.  Этот параметр не используется по умолчанию.  Однако
он автоматически включается всякий раз, когда @command{wdiff} используется
пейджер, и известно, что этот пейджер @emph{не} @command{less}.  См. вариант
@option{-a}.

Этот параметр обычно используется, когда вывод @command{wdiff} не
перенаправляется, а отправляется непосредственно на пользовательский
терминал, например:

@example
wdiff -t @var{old_file} @var{new_file}
@end example

Обычно @command{wdiff} используется вместе с пейджером @command{more},
например:

@example
wdiff -t @var{old_file} @var{new_file} | more
@end example

Однако некоторые версии @command{more} используют выделение @code{termcap} в
своих целях, поэтому возможно странное поведение.

@item --start-delete @var{argument}
@itemx -w @var{argument}
Использование @var{argument} в качестве @dfn{маркера начала удаленного
текста}.  Эта строка будет выводиться перед любой последовательностью
удаленного текста для указания его начала.  По умолчанию этот маркер не
используется, если нет других средств выделения начала такого текста; в этом
случае маркером по умолчанию является @samp{[-}.

@item --end-delete @var{argument}
@itemx -x @var{argument}
Использование @var{argument} в качестве @dfn{маркера окончания удаленного
текста}.  Эта строка будет выводиться после любой последовательности
удаленного текста для указания его окончания.  По умолчанию этот маркер не
используется, если нет других средств выделения окончания такого текста; в
этом случае маркером по умолчанию является @option{-]}.

@item --start-insert @var{argument}
@itemx -y @var{argument}
Использование @var{аргумент} в качестве @dfn{маркера начала вставки}.  Эта
строка будет выводиться перед любой последовательностью вставленного текста
для указания ее начала.  По умолчанию этот не используется, если нет других
средств выделения начала такого текста; в этом случае маркером по умолчанию
является @samp{@{+}.

@item --end-insert @var{argument}
@itemx -z @var{argument}
Использование @var{аргумент} в качестве @dfn{маркера конца вставки}.  Эта
строка будет выводиться после любой последовательности вставленного текста,
чтобы указания ее окончания.  По умолчанию этот маркер не используется, если
нет других выделения такого текста; в этом случае маркером по умолчанию
является @samp{+@}}.

@item --avoid-wraps
@itemx -n
Подавление растяжения строки при отображении удаленного или вставленного
текста.  Любой отдельный фрагмент удаленного или вставленного текста,
занимающий много строк, будет считаться состоящим из множества более мелких
фрагментов, не содержащих новой строки.  Таким образом, удаленный текст,
например, будет иметь маркер окончания удаления в конце каждой строки,
непосредственно перед перносом строки, и маркер начала удаления в начале
следующей строки.  В длинном абзаце вставленного текста каждая строка будет
заключена в квадратные скобки между маркерами начала и конца вставки.  Это
поведение не используется по умолчанию.

@end table

Некоторые опции встроены в программу, но вполне могут стать опциями в более
поздних версиях.  Например:

@itemize @bullet
@item
Ни один кластер не может охватывать границу файла, то есть начинаться в
конце одного входного файла и продолжаться в начале следующего файла.

@item
Кластер может иметь много членов из одного и того же файла.

@item
Пробел между началом строки и первым непробельным символом игнорируется.

@item
Пробелы имеют значение, если они находятся внутри строки или идут в конце
строки.

@item
Строки, не имеющие значимой части (пока только пробельные символы), являются
@dfn{игнорируемыми}.  Такие игнорируемые строки логически рассматриваются
как не являющиеся частью входных файлов для целей сравнения.

@item
Комментарии языка Си не особенно игнорируются.  Если они не игнорируются по
другим причинам (пробельные символы), они действительно являются важными
строками.

@item
Ни один член кластера не может напрямую начинаться или заканчиваться
игнорируемыми строками.  Однако игнорируемые строки все же могут быть
встроены в член кластера.

@item
В сгенерированном выводе кластеры, содержащие наибольшее количество
игнорируемых строк, выводятся первыми, а меньшие кластеры отображаются
последними.  Все строки, относящиеся к одному кластеру, выводятся вместе.
Внутри кластера члены перечислены в порядке начального чтения входных
файлов.

@end itemize

Обратите внимание, что опции @option{-p}, @option{-t} и @option{-[wxyz]} не
являются взаимоисключающими.  При использовании их комбинации вы получаете
совместный результат.  Опция @option{-l} является вариантом опции
@option{-p}.

@comment -------------------------------------------------------------
@node Эффективность
@section Соображения по ресурсам и эффективность

@table @asis
@item Потребление памяти

@command{mdiff} легко справится с проектом среднего размера.  Для 32-битной
архитектуры требования к памяти могут быть рассчитаны следующим образом:

@itemize @bullet
@item
8 байт на файл
@item
8 байт на строку
@item
4 байта на кластер
@item
8 байт на член кластера
@end itemize

@item Потребление времени

Чтобы оценить скорость, рассмотрим пример, показанный выше (@pxref{mdiff}),
и получив следующую статистику:

@example
Read summary: 137 files, 41975 lines
Work summary: 439 clusters, 1608 members @dots{}
@end example

@noindent
После большого количества файлов в кеше памяти и перенаправления вывода в
@file{/dev/null} обработка занимает 3 секунды реального времени на Intel
486/100, что выглядит неплохо.  Я действительно боялся поведения какой-то
скрытой сложности O(@var{n}^2)@footnote{@var{n} — это общее количество
строк.}, даже если программа в основном имеет сложность O(@var{n}*log
(@var{n})).  Может быть, кто-нибудь обнаружит или сконструирует кейсы, чтобы
поставить @command{mdiff} на колени.  До сих пор @command{mdiff}, похоже,
хорошо справлялась с поставленными перед ней небольшими проблемами.  Если мы
придумаем и сгенерируем более традиционный вывод, похожий на @command{diff},
в котором все входные файлы повторно перечисляются, это добавит времени
обработке, но оно будет линейно относительно общей длины входных файлов.

Существует умный оптимизированный алгоритм сортировки @emph{всех} подстрок
файла, который можно обобщить для обработки слов или строк для
@command{mdiff}.  Но поскольку программа работает быстрее, чем мы изначально
ожидали, нет необходимости прибегать к использованию такого алгоритма.

@item Сложность торговли для ясности

Когда строки часто повторяются, существует на удивление много способов
связать блоки строк, и сообщение о @emph{всех} них может привести к очень
громоздким спискам.  Любой выбор сообщать о сходстве или нет, несколько
произволен, но мы должны дать возможность выбора, чтобы программа была
практичной.  Некоторые из этих вариантов подробно описаны.

Если все члены данного кластера @var{A} являются подмножествами всех членов
другого данного кластера @var{B}, то кластер @var{A} полностью забыт.
Однако предположим, например, что в @var{A} больше членов, чем в @var{B}.
Тогда некоторые элементы @var{A} обязательно оказываются не связанными ни с
одним членом @var{B}.  В этом случае было решено, что полезнее сообщать обо
@emph{всех} вхождениях членов @var{A}, даже о тех, которые встроены во
вхождения элементов @var{B}.  Если вас интересуют только члены @var{B},
аннотации, относящиеся к @var{A}, могут восприниматься как мусор.  Однако,
если вы заинтересованы в членах @var{A}, получение их всех, вероятно,
является наиболее полезным выбором.

Иногда случается, что члены одного и того же кластера пересекаются.  В
строке @samp{@w{a a a}} есть два перекрывающихся элемента для кластера,
представленного строкой @samp{@w{a a}}, один состоит из первых двух
@samp{a}, другой - из последних двух @samp{a}.  В этом случае один член
такого перекрытия автоматически обрезается, поэтому перекрытия не
происходит.

Пробельные символы и элементы, содержащие только разделители, являются
возможным источником большой сложности, если они полностью воспринимаются
как важные.  Поскольку это не добавляет ясности, обычно их лучше
игнорировать с помощью @option{--ignore-blank-lines} (@option{-B}) или
@option{--ignore-delimiters} (@option {-j}).  Увеличение значения параметра
@option{--minimum-size=@var{items}} (@samp{@w{-J @var{items}}}) также
усекает сложность в пользу ясности, но некоторые небольшие совпадения потом
могут остаться незамеченным.  Как именно лучше настроить значение
@var{items}, решает пользователь.

@end table

@comment =============================================================
@node unify
@chapter Конвертер форматов diff
@comment =============================================================

Программа @command{unify} предназначена для управления различиями контекста
и различиями унифицированного контекста.  Команда @command{unify} будет
принимать в качестве входных данных либо обычные различия контекста (старого
или нового стиля), либо унифицированные различия контекстов, а в качестве
выходных данных будет генерировать унифицированные различия контекстов или
различия контекстов нового стиля.

Другие параметры позволяют вам отображать не-diff (комментарии) строки в
stderr, изменять diff, удаляя строки комментариев, и/или настраивать diff в
формат, подходящий для выпуска исправлений.

Я думаю, что большинство людей в целом предпочитают унифицированные различия
контекста.  Но у некоторых из нас просто проблемы с чтением unidiff, только
если они не становятся очень простыми.  Обычные сравнения контекста
показывают, каким был код @emph{до}, а затем каким был код @emph{после}.
Некоторые люди просто предпочитают дважды хорошо понять, чем один раз
нечетко.  Инструмент полезен для тех, кто обрабатывает множество различий из
разных источников и хочет, чтобы они были в едином формате.

@menu
* Вызов unify::         Вызов @command{unify}
@end menu

@comment -------------------------------------------------------------
@node Вызов unify
@section Вызов @command{unify}

Формат запуска программы @command{unify}:

@example
unify @var{option} @dots{} [@var{file}]
@end example

Программа читает diff для преобразования из @var{file}, или, если исходный
файл не указан, он будет считан из стандартного ввода.  По умолчанию
различия выводятся в стиле, противоположном тому, что было введено, то есть
различия обычного контекста станут различиями единого контекста, а различия
единого контекста станут различиями единого контекста, что можно
переопределить с помощью параметров.

@command{unify} поддерживает следующие параметры командной строки:

@table @option
@item --version
Просто выводит номера версий на стандартный вывод и завершает работу, ничего
больше не делая.

@item --help
Просто печатает страницу справки на стандартный вывод и завершает работу,
ничего больше не делая.

@item --context-diffs
@itemx -c
Принудительный вывод различий контекста.

@item --echo-comments
@itemx -e
Отображает строки без различий (комментариев) в stderr.  Если строка
комментария удаляется с помощью параметра @option{-p}, она повторяется с
предшествующим @samp{!!! }.  Если удаляются все комментарии (с помощью опции
@option{-s}), специального обозначения не дается.

@item --old-diffs
@itemx -o
Используется для того, чтобы интерпретировать контекстное различие как
относящееся к старому стилю, даже если оно имеет дополнительные звездочки в
конце, которые обычно обозначают новый стиль.  Это необходимо только в том
случае, если @command{unify} не работает с вашей версией @command{diff}.

@item --patch-format
@itemx -p
Включает режим патч-вывода.  Это делает две вещи:

@enumerate
@item
Преобразуйте заголовок, например:

@example
*** orig/file	Sat May  5 02:59:37 1990
--- ./file	Sat May  5 03:00:08 1990
@end example

@noindent
в строку @samp{Index: file} --- мы выбираем более короткое имя и удаляем
начальную последовательность @samp{./}, если она присутствует.

@item
Строки, начинающиеся с @samp{@w{Только в }}, @samp{@w{Общий подкаталог}},
@samp{@w{Двоичные файлы}} или @samp{@w{diff -}}.

@end enumerate

@item -P
То же, что и @option{-p}.

@item --strip-comments
@itemx -s
Удаляет неразличимые строки (комментарии).

@item --unidiffs
@itemx -u
Форсирует унифицированный вывод различий.

@item -U
То же, что и @option{-up}.

@item --use-equals
@itemx -=
Будет использовать префикс @samp{=} в унифицированном diff для строк, общих
для обоих файлов, вместо использования начального пробела.  Хотя это труднее
читать, меньше вероятность того, что оно будет искажено сайтами с
отбрасыванием завершающего пробела при размещении в Usenet.

@end table

@comment =============================================================
@node Совместимость
@chapter Чем отличается @command{mdiff}
@comment =============================================================

В проекте GNU уже есть программа @command{diff}, которая является частью
пакета GNU diffutils.  Существуют также различные не относящиеся к GNU
программы @command{diff}, предоставляемые различными разработчиками.

Существует также хорошо зарекомендовавшая себя @command{wdiff}, которая
использует @command{diff} под капотом. Она немного отличается от
@command{wdiff2}, предполагаемого преемника @command{mdiff}.

В следующих разделах сравниваются спецификации @command{mdiff} как с
@command{diff} GNU, так и с @command{wdiff}.

@menu
* Совместимость с diff::  Отличия от @command{diff}
* wdiff Compatibility::      Отличия от @command{wdiff}
@end menu

@comment -------------------------------------------------------------
@node Совместимость с diff
@section Отличия от @command{diff}

GNU @command{diff} — это программа, которая долгое время совершенствовалась
и для которой алгоритмы основаны на литературе по информатике.  Это быстрая
программа.  Для сравнения, @command{mdiff} — не более чем программа, которую
быстро забивают, чтобы удовлетворить несколько конкретных потребностей.  Она
только пытается не быть чрезмерно медленной.

Большинство параметров @command{diff} принимается @command{mdiff} с одними и
теми же короткими и длинными именами параметров и может выдавать похожий
вывод, что упрощает изучение @command{mdiff} и делает ее менее неожиданным
для пользователей.  Тем не менее, существуют некоторые различия в
декодировании опций и формате вывода.  Поскольку @command{diff} и
@command{mdiff} используют разные алгоритмы сопоставления, весьма вероятно,
что различия будут проанализированы по разному.

@itemize @bullet
@item
Несколько параметров @command{diff}, которые либо не принимают аргументов,
либо требуют обязательного аргумента, реализованы в @command{mdiff} как
параметры, принимающие необязательный аргумент.  Это может привести к
некоторым неожиданностям, например, @option{-c4bir} будет принят
@command{diff} и отклонен @command{mdiff}, однако он может переписать
@option{-birc4} для обоих.  Рассмотрим это ниже.

@item
Опции @option{-c} и @option{-u} в @command{diff} запрашивают вывод обычного
контекста и унифицированного контекста, соответственно, без указания
количества строк в контексте.  @command{diff} имеет параметры @samp{@w{-C
@var{number}}} и @samp{@w{-U @var{number}}} для запроса различий обычного
или унифицированного контекста с @var{number} строк контекста.  Если
@option{-c4} запрашивает четыре строки контекста, @samp{4} на самом деле не
является аргументом @option{-c}, и на самом деле это интерпретируется как
@samp{@w{-c -4} }, где @option{-@var{number}} означает устаревшую опцию для
выбора количества строк контекста, которую @command{mdiff} не реализует.  В
@command{mdiff} @option{-c} и @option{-u} на самом деле являются двумя
опциями, которым разрешено получать необязательный аргумент, поэтому
количество строк может быть задано или не задано по выбору пользователя.  В
@command{mdiff} опции @option{-C} и @option{-U} полностью эквивалентны
@option{-c} и @option{-u} и предоставляются только для совместимости.

@item
Опция @option{-v} в @command{diff} означает @option{--version}, а
@option{--verbose} в @command{mdiff}.  Для @option{--version} в
@command{mdiff} нет сокращенной формы.

@end itemize

@comment -------------------------------------------------------------
@node wdiff Compatibility
@section Отличия от @command{wdiff}

Даже если @command{mdiff} предназначен для полной поддержки @command{wdiff},
параметры были перемешаны, поэтому @command{mdiff} может лучше объединить
параметры @command{diff} и @command{wdiff} в общую схему.  @command{diff}
привычки почти всегда отдавали предпочтение при реорганизации этой опции.

@command{wdiff2} теперь является простым внешним интерфейсом к
@command{mdiff}, который только переписывает параметры.  Применяются
следующие примечания.

@itemize @bullet
@item
Некоторые опции просто передаются без изменений, это @option{-1},
@option{-2}, @option{-3} и @option{-i}.

@item
Параметр @option{-c} также превращается в @option{-i} для совместимости с
версиями @command{wdiff} вплоть до @samp{0.4}.

@item
Простая опция @option{-a} в @command{wdiff} становится @option{-A} в
@command{mdiff}, @option{-l} становится @option{-k}, @option{-n} становится
@option{-m}, @option{-p} становится @option{-o}, @option{-s} становится
@option{-v}, а @option{-t} становится @option{-z}.

@item
Опции, представляющие строки, такие как @option{-w}, @option{-x},
@option{-y} и @option{-z} в @command{wdiff}, соответственно становятся
@option{-Y}, @option{-Z}, @option{-Q} и @option{-R} в @command{mdiff}.

@item
Опции @option{-C}, @option{-h} и @option{-v} обрабатываются непосредственно
@command{wdiff} и не передаются @command{mdiff}.

@item
Кроме того, параметр @option{-C} для @command{wdiff} не имеет эквивалента в
@command{mdiff}.

@item
Новая опция @option{-q} блокирует сообщение, объясняющее, как
@command{mdiff} могла быть вызвана напрямую.

@item
Параметр @option{--diff-input} (@option{-d}) из @command{wdiff} не
поддерживается @command{wdiff2} (пока).

@end itemize

@comment end ifset EXPERIMENTAL
@end ifset

@comment =============================================================
@node Experimental
@chapter Экспериментальные программы
@comment =============================================================

Исходный пакет GNU wdiff содержит исходные коды ряда инструментов, помимо
самой команды @command{wdiff}.  Они считаются экспериментальными: они могут
сработать для вас, но с тем же успехом могут и провалиться.  Следующие
программы считаются экспериментальными:

@itemize @bullet
@item @command{mdiff}
@item @command{wdiff2}
@item @command{unify}
@end itemize

Сборку этих приложений можно включить передав @option{--with-experimental} в
скрипт @file{configure}.

@ifset EXPERIMENTAL
@emph{Для этой сборки они были включены.} Если вы столкнулись с ошибкой в
​​экспериментальной программе, сопровождающие все равно хотели бы узнать о
ней, но есть большая вероятность, что они решат не исправлять такие
проблемы, если вы не предоставите патч.
@end ifset
@ifclear EXPERIMENTAL
@emph{Для этой сборки они были отключены.} Поэтому их документация здесь
также опущена.  Вы можете найти полную документацию по всем частям GNU wdiff
на @uref{http://www.gnu.org/software/wdiff/, домашняя страница GNU wdiff}.
Если вы думаете, что хотели бы попробовать их, вы можете самостоятельно
скомпилировать этот пакет из исходного кода.
@end ifclear

@ifset EXPERIMENTAL
@menu
* История экспериментальных инструментов::  История 
                                                                                  экспериментальных 
                                                                                  программ
@end menu

@comment -------------------------------------------------------------
@node История экспериментальных инструментов
@section История экспериментальных программ

Многие пользователи предлагали функции, которые, в свою очередь, требовали
интеграции @command{wdiff} в GNU diffutils.  Сотрудничество оказалось
довольно сложным.  Через несколько лет автор @command{wdiff}, наконец,
сдался и создал @command{mdiff}, чтобы выйти из ситуации и получить
возможность выполнять предложения пользователей.

Прежде чем @command{mdiff} и новая @command{wdiff2}, основанная на ней, были
официально выпущены, первоначальный автор отказался от поддержки.  У новых
сопровождающих было мало опыта работы с кодом, и поэтому они решили пометить
эти возможности как экспериментальные. Таким образом, код не был бы потерян,
но стало ясно, что он не так протестирован, как старая добрая команда
@code{wdiff}.

@end ifset

@bye
